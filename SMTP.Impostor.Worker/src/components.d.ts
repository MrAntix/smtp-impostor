/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  AppIcons,
} from './app-icon/model';
import {
  HubStatus,
  IHubMessage,
  IHubSocketProvider,
} from './impostor-hub/model';
import {
  IHost,
  IHostUpdate,
} from './redux';

export namespace Components {
  interface AppIcon {
    'flipHorizontal': boolean;
    'flipVertical': boolean;
    'rotate': number;
    'type': AppIcons;
  }
  interface AppRoot {}
  interface ImpostorHub {
    'connectAsync': (url?: string) => Promise<void>;
    'disconnectAsync': () => Promise<void>;
    'sendAsync': (message: IHubMessage) => Promise<void>;
    'socketProvider': IHubSocketProvider;
    'status': HubStatus;
    'url': string;
  }
  interface SmtpHost {
    'readonly': boolean;
    'toggleReadonly': (value?: boolean) => Promise<void>;
    'toggleState': (start?: boolean) => Promise<void>;
    'value': IHost;
  }
}

declare global {


  interface HTMLAppIconElement extends Components.AppIcon, HTMLStencilElement {}
  const HTMLAppIconElement: {
    prototype: HTMLAppIconElement;
    new (): HTMLAppIconElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  const HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLImpostorHubElement extends Components.ImpostorHub, HTMLStencilElement {}
  const HTMLImpostorHubElement: {
    prototype: HTMLImpostorHubElement;
    new (): HTMLImpostorHubElement;
  };

  interface HTMLSmtpHostElement extends Components.SmtpHost, HTMLStencilElement {}
  const HTMLSmtpHostElement: {
    prototype: HTMLSmtpHostElement;
    new (): HTMLSmtpHostElement;
  };
  interface HTMLElementTagNameMap {
    'app-icon': HTMLAppIconElement;
    'app-root': HTMLAppRootElement;
    'impostor-hub': HTMLImpostorHubElement;
    'smtp-host': HTMLSmtpHostElement;
  }
}

declare namespace LocalJSX {
  interface AppIcon {
    'flipHorizontal'?: boolean;
    'flipVertical'?: boolean;
    'rotate'?: number;
    'type'?: AppIcons;
  }
  interface AppRoot {}
  interface ImpostorHub {
    'onMessageReceived'?: (event: CustomEvent<IHubMessage>) => void;
    'onStatusChanged'?: (event: CustomEvent<HubStatus>) => void;
    'socketProvider'?: IHubSocketProvider;
    'status'?: HubStatus;
    'url'?: string;
  }
  interface SmtpHost {
    'onStartHost'?: (event: CustomEvent<IHost>) => void;
    'onStopHost'?: (event: CustomEvent<IHost>) => void;
    'onUpdateHost'?: (event: CustomEvent<IHostUpdate>) => void;
    'readonly'?: boolean;
    'value'?: IHost;
  }

  interface IntrinsicElements {
    'app-icon': AppIcon;
    'app-root': AppRoot;
    'impostor-hub': ImpostorHub;
    'smtp-host': SmtpHost;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'app-icon': LocalJSX.AppIcon & JSXBase.HTMLAttributes<HTMLAppIconElement>;
      'app-root': LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
      'impostor-hub': LocalJSX.ImpostorHub & JSXBase.HTMLAttributes<HTMLImpostorHubElement>;
      'smtp-host': LocalJSX.SmtpHost & JSXBase.HTMLAttributes<HTMLSmtpHostElement>;
    }
  }
}


